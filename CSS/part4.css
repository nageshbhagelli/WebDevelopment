/*
CSS Transitions: Transitions enable you to define the transition between two states of an element.
    Transition Shorthand : property name | duration | timing-function | delay
    Ex: transition: margin-top 2s ease-in-out 0.2s;

CSS Transform: This property lets you rotate, scale, skew, or translate an element.
    (i) Rotate -> transform : rotate (45deg);
    (ii) Scale -> transform : scale(0.5, 2);  (x-axis, y-axis)
    (iii)Translate ->
        transform : translate (50px, 50px);
        transform : translateX (10px);
        transform : translateY (10px);
    (iv)Skew -> transform : skew(30deg);

Box Shadow -> It adds shadow effects around an element's frame.
    box-shadow : 2px 2px 10px green; (x-offset, y-offset, blur-radius, color)

*/

/* div {
    height: 200px;
    width: 200px;
    background-color: green;
    transition: 2s 1s;
}

div:hover {
    background-color: black;
    border-radius: 50%;
} */

section {
    margin-top: 100px;
}

.transform {
    width: 200px;
    height: 50px;
    text-align: center;
    background-color: #7aa874;
    border: 2px solid black;
    margin: 10px auto;
    box-shadow: 5px 5px 10px black;
}

.transform:nth-of-type(2n) {
    background-color: #f7db6a;
}

.transform:nth-of-type(3n) {
    background-color: #cbb02d;
}

#one {
    transform: rotate(45deg);
}

#two {
    transform: scale(0.5);
}

#three  {
    transform: translate(-200px);
}

#four {
    transform: skew(30deg);
}

#five {
    transform: rotate(-30deg) translate(100px, 50px) scale(0.8);
}
/*
Background Image -> Lets you set an image as a background.
    background-image : url("..lsomepathl..img.jpg");
    background-size : contain | cover | auto; mostly cover is used

Position -> The position CSS property sets how an element is positioned in a document.
    The top, right, bottom, and left properties determine the final location of positioned elements.
    • static : The top, right, bottom, left, and z-index properties have no effect. This is the default value.
    • relative : the offset is relative to itself based on the values of top, right, bottom, and left.
    • absolute : The element is removed from the normal document flow, and no space is created for the element in the page layout.
                  It is positioned relative to its closest positioned ancestor, if any; otherwise, it is placed relative to the initial containing block.
    • fixed : The element is removed from the normal document flow, and no space is created for the element in the page layout.
               It is positioned relative to the initial containing block established by the viewport.


    */
#image {
    height: 400px;
    width: 400px;
    margin: 100px auto;
    background-image: url("fern.jpeg");
    background-size: contain;
}